{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","match","params","put","Header","href","branding","about","NotFound","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fdbe70c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => \r\n                    contact.id !== action.payload)\r\n            }\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n               contacts: [action.payload, ...state.contacts]\r\n        }\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    contact.id === action.payload.id ? action.payload : contact\r\n                )\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    \r\n    state = {\r\n        contacts : [\r\n          \r\n        ],\r\n        dispatch: action => {\r\n            this.setState(state => reducer (state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n     \r\n        this.setState({\r\n            contacts: res.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <Context.Provider value={this.state} >\r\n               {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n\r\n class Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo: true\r\n    }\r\n\r\n    onShowClick = () => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        })\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n\r\n        try {\r\n            await axios.delete('https://jsonplaceholder.typicode.com/users/' + id)\r\n        \r\n            dispatch({ type: 'DELETE_CONTACT', payload: id})\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id}) // we do this here because we don't actually deal with real database\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>{name} <i onClick={this.onShowClick} className=\"fad fa-arrow-circle-down\"></i>\r\n                        <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                        <Link to={`/contact/edit/${id}`}>\r\n                            <i style={{\r\n                                cursor: 'pointer',\r\n                                float: 'right',\r\n                                color: 'black',\r\n                                marginRight: '1rem'\r\n                            }} className=\"fa fa-pencil-alt\">Edit</i>\r\n                        </Link>\r\n                        </h4>\r\n                        {showContactInfo ? \r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">Email: {email}</li>\r\n                            <li className=\"list-group-item\">Phone:  {phone}</li>\r\n                        </ul>\r\n                        : ''}\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n    \r\n \r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>                            \r\n                        {contacts.map(contact => ( \r\n                            <Contact  key={contact.id} contact={contact}  />\r\n                        ) )}\r\n                        </React.Fragment>\r\n                    )\r\n                    \r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nlet TextInputGroup = ({\r\n    label,\r\n    name,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    value,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input name={name} type={type} className=\"form-control form-control-lg\"\r\n            placeholder={placeholder}\r\n            value = {value}\r\n            onChange={onChange}\r\n            className={classnames('form-control form-control-lg', {\r\n                'is-invalid': error\r\n            })}\r\n            />\r\n\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport  TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name] : e.target.value});\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n\r\n        if (name == \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    name: \"Name cannot be empty\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (phone == \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    phone: \"Phone cannot be empty\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (email == \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    email: \"Email cannot be empty\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users/', newContact)\r\n       \r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data})\r\n     \r\n       \r\n\r\n        this.setState({\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n       const {name, phone, email, errors} = this.state;\r\n       return (<Consumer>\r\n           {value => {\r\n               const {dispatch} = value;\r\n\r\n               return (\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">\r\n                        Add Contact\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                            <TextInputGroup error={errors.name} name=\"name\" label=\"Name\" placeholder=\"Enter name..\" value={name} onChange={this.onChange} />\r\n                           \r\n                            <TextInputGroup error={errors.phone} name=\"phone\" label=\"Phone\" placeholder=\"Enter phone..\" value={phone} onChange={this.onChange} />\r\n\r\n                            <TextInputGroup error={errors.email} name=\"email\" label=\"Email\" placeholder=\"Enter email..\" value={email} onChange={this.onChange} />\r\n                            \r\n                            <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n           }}\r\n          \r\n       </Consumer>);\r\n      \r\n    }\r\n}\r\nexport default AddContact","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport  TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res =  await axios.get('https://jsonplaceholder.typicode.com/users/'+id)\r\n    \r\n        const contact =res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name] : e.target.value});\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n\r\n        if (name == \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    name: \"Name cannot be empty\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (phone == \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    phone: \"Phone cannot be empty\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (email == \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    email: \"Email cannot be empty\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put('https://jsonplaceholder.typicode.com/users/'+id, newContact)\r\n       \r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data})\r\n     \r\n       \r\n\r\n        this.setState({\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n       const {name, phone, email, errors} = this.state;\r\n       return (<Consumer>\r\n           {value => {\r\n               const {dispatch} = value;\r\n\r\n               return (\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">\r\n                        Edit Contact\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                            <TextInputGroup error={errors.name} name=\"name\" label=\"Name\" placeholder=\"Enter name..\" value={name} onChange={this.onChange} />\r\n                           \r\n                            <TextInputGroup error={errors.phone} name=\"phone\" label=\"Phone\" placeholder=\"Enter phone..\" value={phone} onChange={this.onChange} />\r\n\r\n                            <TextInputGroup error={errors.email} name=\"email\" label=\"Email\" placeholder=\"Enter email..\" value={email} onChange={this.onChange} />\r\n                            \r\n                            <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-light btn-block\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n           }}\r\n          \r\n       </Consumer>);\r\n      \r\n    }\r\n}\r\nexport default EditContact","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nlet Header = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {props.branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i>Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i>Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i>About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n   \r\n}\r\nHeader.defaultProps = {\r\n    branding: \"My app\"\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nexport default function about(props) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager </h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4 text-danger\">404 Not found</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Provider } from './context';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manger\" />\n\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}